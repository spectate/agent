name: Build and attach to release
concurrency:
  group: main-build-release
  cancel-in-progress: true
on:
  create:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build-linux:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21.2'
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::$(git describe --tags)
      - name: Install cross-compilers
        run: sudo apt-get -y install gcc-aarch64-linux-gnu
      - name: Run goreleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --clean --config .goreleaser.linux.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          GO111MODULE: on

  build-darwin:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21.2'
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::$(git describe --tags)
      - name: Run goreleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --clean --config .goreleaser.darwin.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          GO111MODULE: on
